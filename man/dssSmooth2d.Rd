% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dssSmooth2d.R
\name{dssSmooth2d}
\alias{dssSmooth2d}
\title{Create a combined smooth scatterplot}
\usage{
dssSmooth2d(
  x,
  y,
  npoints = 128,
  shades = 8,
  draw.image = FALSE,
  labels = TRUE,
  axes = TRUE,
  categories = NULL,
  colour.pool = c("#377eb8", "#e41a1c", "#4daf4a", "#984ea3", "#ff7f00", "#a65628",
    "#f781bf", "#999999"),
  emphasize_level = 0,
  type = "combine",
  async = FALSE,
  datasources = NULL
)
}
\arguments{
\item{x}{y characters, names of the  x and y coordinates for the plot.
If x and y are dataframe columns they must be specified with the dollar sign notation ('DF$col')}

\item{npoints}{number of equally spaced grid points in both directions (same as nbin in smoothScatter)}

\item{shades}{number of shades per plot (default 8)}

\item{draw.image}{boolean specifying if a plot should be drawn. In either case a bitmap is returned
that can be plotted subsequently with a call too image(). Default is FALSE.}

\item{labels}{a boolean, should labels (the names of the 2 vectors) be printed in the plot?}

\item{axes}{a boolean, should axes be drawn?}

\item{categories}{a character the name of a factor. If provided, the plot will be split by the levels of this factor}

\item{colour.pool}{vector of colours that will be picked sequentially, one for each category. The default contains 8 values, if
there are more levels, the colours will be recycled.}

\item{emphasize_level}{a number, which level should be emphasized (stronger colour, more opaque, layered on top)}

\item{type}{a character, "combine" (the default) or "split"}

\item{async}{a logical, see datashield.aggregate}

\item{datasources}{a list of opal objects obtained after logging into the opal servers (see datashield.login)}
}
\value{
a list with the format (lims = <calculated or specified limits>, img = bitmap of the image to be drawn, legend = the colours used for each category)
}
\description{
Like smoothScatter, it creates scatterplots with smoothed densities colour representation
}
